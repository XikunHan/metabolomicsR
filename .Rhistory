Index_each <- (v_batch  == id_batch)
v_median <- median(InputData_each[Index_each], na.rm = TRUE)
set(OutputData, which(Index_each), j, InputData_each[which(Index_each)]/v_median)
}
}
close(con = pb)
return(OutputData)
}
object2 <- batch_norm_df(new)
plot( object2$M36589, new$M36589)
plot( object2$M38002, object$M38002)
remove.packages("metabolomicsR")
rs.restartR()
q()
remove.packages("metabolomicsR")
rs.restartR()
devtools::document()
devtools::document()
rs.restartR()
devtools::document()
devtools::document()
remove.packages("metabolomicsR")
rs.restartR()
devtools::document()
devtools::install()
devtools::check()
# BiocManager::install("BiocStyle")
BiocManager::install("BiocStyle")
devtools::check()
install.packages("hrbrthemes")
devtools::check()
install.packages("ggstatsplot")
install.packages("ggstatsplot")
library(data.table)
library(ggplot2)
library(cowplot)
library(plotROC)
library(maplet)
install.packages("maplet")
devtools::install_github(repo="krumsieklab/maplet", subdir="maplet")
install.packages("ggmosaic")
devtools::install_github(repo="krumsieklab/maplet", subdir="maplet")
install.packages("network")
devtools::install_github(repo="krumsieklab/maplet", subdir="maplet")
install.packages("pathview")
devtools::install_github(repo="krumsieklab/maplet@v1.2.1", subdir="maplet")
devtools::check()
install.packages("magick")
devtools::check()
install.packages("M3C")
BiocManager::install("M3C")
library(M3C)
devtools::check(vignettes = FALSE) # fast
install.packages("ggthemes", "impute")
install.packages(c("ggthemes", "impute"))
BiocManager::install( "hmdbQuery")
BiocManager::install("impute")
BiocManager::install("impute")
devtools::check(vignettes = FALSE) # fast
devtools::check(vignettes = FALSE) # fast
library(devtools)
library(genuMet)
install_github("xyomics/genuMet")
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
install.packages("callr")
install.packages("callr")
devtools::check(vignettes = FALSE) # fast, run first
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
pkgdown::build_site() # for pkgdown doc
q()
remove.packages("metabolomicsR")
remove.packages("metabolomicsR")
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
.Last.error
install.packages("pkgdown")
install.packages("pkgdown")
usethis::use_pkgdown()
devtools::document()
devtools::install()
devtools::check(vignettes = FALSE) # fast, run first
pkgdown::build_site() # for pkgdown doc
devtools::check()
pkgdown::build_site() # for pkgdown doc
devtools::document()
devtools::install()
remove.packages("metabolomicsR")
devtools::document()
devtools::install()
q()
remove.packages("metabolomicsR")
rs.restartR()
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
devtools::spell_check()
devtools::release()
devtools::check()
#
df <- fread("~/Downloads/lipid.csv")
#
lipid <- fread("~/Downloads/lipid.csv")
library(metabolomicsR)
lipid_input <- lipid[, c(1, 6, 7:405)]
names(lipid_input)[1:2] <- c("ID", "Batch")
data <- QC_pipeline_df(lipid_input, replace_outlier_method = "winsorize", run_batch_norm = T)
plot(data$AcCa_10_0_H, lipid$AcCa_10_0_H)
boxplot(lipid$AcCa_10_0_H ~ lipid$lab_batch)
boxplot(data$AcCa_10_0_H ~ data$lab_batch)
boxplot(data$AcCa_10_0_H ~ data$Batch)
q()
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
devtools::document()
devtools::install()
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
q()
remove.packages("metabolomicsR")
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
devtools::check()
library(BiocStyle)
library(metabolomicsR)
library(data.table)
library(ggplot2)
library(cowplot)
library(plotROC)
file_path <- base::system.file("extdata", "QMDiab_metabolomics_OrigScale.xlsx", package = "metabolomicsR", mustWork = TRUE)
df_plasma <- load_excel(path = file_path,
data_sheet = 1,
feature_sheet = 4,
sample_sheet = 8,
sampleID = "QMDiab-ID",
featureID = "BIOCHEMICAL"
)
devtools::document()
devtools::install()
file_path <- base::system.file("extdata", "QMDiab_metabolomics_OrigScale.xlsx", package = "metabolomicsR", mustWork = TRUE)
df_plasma <- load_excel(path = file_path,
data_sheet = 1,
feature_sheet = 4,
sample_sheet = 8,
sampleID = "QMDiab-ID",
featureID = "BIOCHEMICAL"
)
# change the feature ID to the column `COMP_IDstr`
df_plasma <- update_Metabolite(df_plasma, dataset = "COMP_IDstr", action = "change_featureID")
# load urine metabolomic data
df_urine <- load_excel(path = file_path,
data_sheet = 2,
feature_sheet = 5,
sample_sheet = 9,
sampleID = "QMDiab-ID",
featureID = "BIOCHEMICAL"
)
df_urine <- update_Metabolite(df_urine, dataset = "COMP_IDstr", action = "change_featureID")
# load saliva metatabolomic data
df_saliva <- load_excel(path = file_path,
data_sheet = 3,
feature_sheet = 6,
sample_sheet = 10,
sampleID = "QMDiab-ID",
featureID = "BIOCHEMICAL"
)
df_saliva <- update_Metabolite(df_saliva, dataset = "COMP_IDstr", action = "change_featureID")
p <- plot_QC(df_plasma)
p$p
df_plasma_QC <- QC_pipeline(df_plasma, replace_outlier_method = "winsorize", impute_method = NULL)
p <- plot_QC(df_urine)
p$p
df_urine_QC
p <- plot_QC(df_saliva)
p$p
df_saliva_QC <- QC_pipeline(df_saliva, replace_outlier_method = "winsorize", impute_method = NULL)
df_saliva_QC
df_plasma_QC <- impute(df_plasma_QC, method = "half-min")
df_plasma_scale <-  transformation(df_plasma_QC, method = "log")
df_plasma_scale <-  transformation(df_plasma_scale, method = "scale")
# if no features were selected, randomly show 16 metabolites
plot_Metabolite(df_plasma_QC, plot = "boxplot", x = "T2D", color ="ETHNICITY", shape = "T2D")
# select three metabolites
plot_Metabolite(df_plasma_QC, x = "T2D", plot = "boxplot", feature_name = c("M43027",  "M11953", "M38002"))
# comparisons between groups using `ggbetweenstats`
plot_Metabolite(df_plasma_QC, x = "T2D", plot = "betweenstats",  feature_name = c("M43027",  "M11953"))
plot_Metabolite(df_plasma_scale, plot = "boxplot", x = "T2D", color ="ETHNICITY", shape = "T2D")
plot_Metabolite(df_plasma_scale, plot = "histogram", color = "T2D")
plot_Metabolite(df_plasma_scale, plot = "histogram", color = "ETHNICITY")
# Take the urine data for example, the batch of the samples are missing. To illustrate the usage of the normalization method, we assume that 120 samples in each batch.
unique(featureData(df_urine_QC)$PLATFORM)
# add new columns by reference (column name uppercase)
sampleData(df_urine_QC)[, `GC/MS` := rep(1:3, each = 120)[1:359]]
fit_lm <- regression(object = df_plasma_scale, phenoData = NULL,
model = "lm", outcome = "BMI",
covars = c("AGE", "GENDER", "ETHNICITY"),
factors = "ETHNICITY")
head(fit_lm)
dd <- merge(fit_lm, featureData(df_plasma_scale), by.x = "term", by.y = "featureID")
dd[, sig := ifelse(p.value.adj < 0.1, 1, 0)]
plot_volcano(dd, color = NULL, label = "BIOCHEMICAL")
df_sig <- dd[sig == 1 & !is.na(HMDb_ID), ]
df_sig
library(stringr)
# this function is used to change HMDB ID.
add_two_zeros <- function(x) {
if(str_count(x) == 9) x <- str_replace(x, "HMDB", "HMDB00")
return(x)
}
v_list <- sapply(df_sig$HMDb_ID, add_two_zeros)
v_list
df_sig$HMDB_anno <- anno_hmdb(v_list)
df_sig
# explore the first entry
df_sig$HMDB_anno[[1]]@metabolite
df_sig$HMDB_anno[[1]]@diseases
q()
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
devtools::document()
devtools::install()
去（
q()
rs.restartR()
devtools::document()
devtools::install()
devtools::check(vignettes = FALSE) # fast, run first
devtools::check()
pkgdown::build_site() # for pkgdown doc
library(data.table)
# 2/26 ROSMAP WGS
ls("~/Documents/")
# 2/26 ROSMAP WGS
ls("~/Downloads//")
# 2/26 ROSMAP WGS
ls("~/Downloads/")
# 2/26 ROSMAP WGS
ls("/Users/xikunhan/Downloads/")
pwd
# 2/26 ROSMAP WGS
ls("/Users/xikunhan/Downloads")
# 2/26 ROSMAP WGS
list.files("/Users/xikunhan/Downloads")
df <- fread("~/Downloads/ROSMAP_assay_wholeGenomeSeq_metadata.csv")
df_WGS  <- fread("~/Downloads/ROSMAP_assay_wholeGenomeSeq_metadata.csv")
df_cov  <- fread("~/Downloads/ROSMAP_clinical.csv")
View(df_WGS)
View(df_cov)
View(df_WGS)
View(df_cov)
gplots::venn(list(df_cov$individualID, df_WGS$specimenID))
df_cov2  <- fread("~/Downloads/ROSMAP_biospecimen_metadata.csv")
View(df_cov2)
table(df_cov2$assay)
table(df_cov2$assay, useNA = "ifany")
df_cov_s <- df_cov2[assay == "wholeGenomeSeq"]
View(df_cov_s)
gplots::venn(list(df_cov$individualID, df_cov_s$individualID))
View(df_cov)
View(df_cov)
View(df_cov2)
View(df_cov2)
View(df_cov_s)
View(df_WGS)
# 2/28 Banksy ####
remotes::install_github("prabhakarlab/Banksy")
library(Banksy)
library(Banksy)
library(SummarizedExperiment)
library(SpatialExperiment)
library(scuttle)
BiocManager::install("scuttle")
library(scuttle) # BiocManager::install("scuttle")
library(scater)
BiocManager::install("scater")
library(SummarizedExperiment)
library(SpatialExperiment)
library(scuttle) # BiocManager::install("scater")
library(scater)
library(cowplot)
library(ggplot2)
data(hippocampus)
gcm <- hippocampus$expression
locs <- as.matrix(hippocampus$locations)
View(gcm)
View(locs)
se <- SpatialExperiment(assay = list(counts = gcm), spatialCoords = locs)
se
se@assays@data
se@assays@data$counts
# QC based on total counts
qcstats <- perCellQCMetrics(se)
View(qcstats)
qcstats
thres <- quantile(qcstats$total, c(0.05, 0.98))
keep <- (qcstats$total > thres[1]) & (qcstats$total < thres[2])
se <- se[, keep]
# Normalization to mean library size
se <- computeLibraryFactors(se)
aname <- "normcounts"
assay(se, aname) <- normalizeCounts(se, log = FALSE)
se
lambda <- c(0, 0.2)
k_geom <- c(15, 30)
se <- Banksy::computeBanksy(se, assay_name = aname, compute_agf = TRUE, k_geom = k_geom)
set.seed(1000)
se <- Banksy::runBanksyPCA(se, use_agf = TRUE, lambda = lambda)
se <- Banksy::runBanksyUMAP(se, use_agf = TRUE, lambda = lambda)
se <- Banksy::clusterBanksy(se, use_agf = TRUE, lambda = lambda, resolution = 1.2)
se <- Banksy::connectClusters(se)
cnames <- colnames(colData(se))
cnames <- cnames[grep("^clust", cnames)]
cnames
colData(se) <- cbind(colData(se), spatialCoords(se))
plot_nsp <- plotColData(se,
x = "sdimx", y = "sdimy",
point_size = 0.6, colour_by = cnames[1]
)
plot_bank <- plotColData(se,
x = "sdimx", y = "sdimy",
point_size = 0.6, colour_by = cnames[2]
)
plot_grid(plot_nsp + coord_equal(), plot_bank + coord_equal(), ncol = 2)
plot_bank
plot_grid(
plot_nsp + facet_wrap(~colour_by),
plot_bank + facet_wrap(~colour_by),
ncol = 2
)
rdnames <- reducedDimNames(se)
umap_nsp <- plotReducedDim(se,
dimred = grep("UMAP.*lam0$", rdnames, value = TRUE),
colour_by = cnames[1]
)
umap_bank <- plotReducedDim(se,
dimred = grep("UMAP.*lam0.2$", rdnames, value = TRUE),
colour_by = cnames[2]
)
plot_grid(
umap_nsp,
umap_bank,
ncol = 2
)
print(.Random.seed[1:5])
set.seed(124)
print(.Random.seed[1:5])
set.seed(124)
a <- sample(100, 5)
set.seed(124)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
for(i in 1:10) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
a <- sample(100, 5)
print(a)
for(i in 1:10) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
set.seed(124)
print(.Random.seed[1:5])
for(i in 1:10) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
a <- sample(100, 5)
print(a)
for(i in 1:10) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
set.seed(124)
print(.Random.seed[1:5])
for(i in 1:10) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
set.seed(124)
set.seed(124)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
a <- sample(100, 5)
print(a)
a <- sample(100, 5)
print(a)
set.seed(124)
a <- sample(100, 5)
print(a)
a <- sample(100, 5)
print(a)
a <- sample(100, 5)
print(a)
set.seed(124)
for(i in 1:3) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
set.seed(124)
for(i in 1:3) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
set.seed(124)
a <- sample(100, 5)
print(a)
for(i in 1:3) {
print(i)
print(.Random.seed[1:5])
a <- sample(100, 5)
print(a)
}
library(data.table)
if(0) {
load(file = "~/Documents/GitHub/temp/metab_data.RData")
}
devtools::install_github("XikunHan/metabolomicsR", dependencies = TRUE, force = TRUE)
devtools::check(vignettes = FALSE) # fast, run first
devtools::check()
pkgdown::build_site()
library(pkgdown)
install.packages("pkgdown")
install.packages("pkgdown")
library(pkgdown)
library(usethis)
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
usethis::gh_token_help()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
usethis::gh_token_help()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
library(usethis)
gitcreds::gitcreds_set()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
library(usethis)
gitcreds::gitcreds_set()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
usethis::edit_r_environ()
Sys.getenv("GITHUB_PAT")
usethis::gh_token_help()
library(usethis)
gitcreds::gitcreds_set()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
library(metabolomicsR)
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::build_site()
library(genuMet)
install_github("xyomics/genuMet")
devtools::install_github("xyomics/genuMet")
pkgdown::build_site() # for pkgdown doc
pkgdown::build_site() # for pkgdown doc
library(data.table)
df_data <- fread(file = base::system.file("extdata", "12345-Results.csv.gz"))
devtools::check(vignettes = FALSE) # fast, run first
devtools::check(vignettes = FALSE) # fast, run first
devtools::check(vignettes = FALSE) # fast, run first
devtools::document()
devtools::install()
devtools::check(vignettes = FALSE) # fast, run first
pkgdown::build_site() # for pkgdown doc
devtools::check(vignettes = FALSE) # fast, run first
pkgdown::build_site() # for pkgdown doc
file_path <- base::system.file("extdata", "QMDiab_metabolomics_OrigScale.xlsx", package = "metabolomicsR", mustWork = TRUE)
file1 <- file_path <- base::system.file("extdata", "12345-Results.csv.gz", package = "metabolomicsR", mustWork = TRUE)
devtools::document()
devtools::install()
pkgdown::build_site() # for pkgdown doc
